// Generated by Hebron at 8/26/2025 1:17:22 PM

using System;
using System.Runtime.InteropServices;

namespace PlMpegNet
{
	partial class PlMpeg
	{
		public class plm_t
		{
			public plm_demux_t demux;
			public double time;
			public int has_ended;
			public int loop;
			public int has_decoders;
			public int video_enabled;
			public int video_packet_type;
			public plm_buffer_t video_buffer;
			public plm_video_t video_decoder;
			public int audio_enabled;
			public int audio_stream_index;
			public int audio_packet_type;
			public double audio_lead_time;
			public plm_buffer_t audio_buffer;
			public plm_audio_t audio_decoder;
			public plm_video_decode_callback video_decode_callback;
			public object video_decode_callback_user_data;
			public plm_audio_decode_callback audio_decode_callback;
			public object audio_decode_callback_user_data;
		}

		public unsafe class plm_buffer_t
		{
			public ulong bit_index;
			public ulong capacity;
			public ulong length;
			public ulong total_size;
			public int discard_read_bytes;
			public int has_ended;
			public int free_when_done;
			public plm_buffer_load_callback load_callback;
			public plm_buffer_seek_callback seek_callback;
			public plm_buffer_tell_callback tell_callback;
			public object load_callback_user_data;
			public byte* bytes;
			public plm_buffer_mode mode;
		}

		public class plm_demux_t
		{
			public plm_buffer_t buffer;
			public int destroy_buffer_when_done;
			public double system_clock_ref;
			public ulong last_file_size;
			public double last_decoded_pts;
			public double start_time;
			public double duration;
			public int start_code;
			public int has_pack_header;
			public int has_system_header;
			public int has_headers;
			public int num_audio_streams;
			public int num_video_streams;
			public plm_packet_t current_packet = new plm_packet_t();
			public plm_packet_t next_packet = new plm_packet_t();
		}

		public class plm_video_t
		{
			public double framerate;
			public double pixel_aspect_ratio;
			public double time;
			public int frames_decoded;
			public int width;
			public int height;
			public int mb_width;
			public int mb_height;
			public int mb_size;
			public int luma_width;
			public int luma_height;
			public int chroma_width;
			public int chroma_height;
			public int start_code;
			public int picture_type;
			public plm_video_motion_t motion_forward;
			public plm_video_motion_t motion_backward;
			public int has_sequence_header;
			public int quantizer_scale;
			public int slice_begin;
			public int macroblock_address;
			public int mb_row;
			public int mb_col;
			public int macroblock_type;
			public int macroblock_intra;
			public int[] dc_predictor = new int[3];
			public plm_buffer_t buffer;
			public int destroy_buffer_when_done;
			public plm_frame_t frame_current = new plm_frame_t();
			public plm_frame_t frame_forward = new plm_frame_t();
			public plm_frame_t frame_backward = new plm_frame_t();
			public int[] block_data = new int[64];
			public byte[] intra_quant_matrix = new byte[64];
			public byte[] non_intra_quant_matrix = new byte[64];
			public int has_reference_frame;
			public int assume_no_b_frames;
		}

		public class plm_audio_t
		{
			public double time;
			public int samples_decoded;
			public int samplerate_index;
			public int bitrate_index;
			public int version;
			public int layer;
			public int mode;
			public int bound;
			public int v_pos;
			public int next_frame_data_size;
			public int has_header;
			public plm_buffer_t buffer;
			public int destroy_buffer_when_done;
			public plm_quantizer_spec_t?[,] allocation = new plm_quantizer_spec_t?[2, 32];
			public byte[,] scale_factor_info = new byte[2, 32];
			public int[,,] scale_factor = new int[2, 32, 3];
			public int[][][] sample;
			public plm_samples_t samples = new plm_samples_t();
			public float[] D = new float[1024];
			public float[][] V;
			public float[] U = new float[32];

			public plm_audio_t()
			{
				sample = new int[2][][];

				for (var i = 0; i < 2; ++i)
				{
					sample[i] = new int[32][];
					for (var j = 0; j < 32; ++j)
					{
						sample[i][j] = new int[3];
					}
				}

				V = new float[2][];
				for (var i = 0; i < 2; ++i)
				{
					V[i] = new float[1024];
				}
			}
		}

		public unsafe class plm_packet_t
		{
			public int type;
			public double pts;
			public ulong length;
			public byte* data;
		}

		public struct plm_plane_t
		{
			public uint width;
			public uint height;
			public byte[] data;
		}

		public class plm_frame_t
		{
			public double time;
			public uint width;
			public uint height;
			public plm_plane_t y;
			public plm_plane_t cr;
			public plm_plane_t cb;

			public plm_frame_t Clone()
			{
				return new plm_frame_t
				{
					time = time,
					width = width,
					height = height,
					y = y,
					cr = cr,
					cb = cb
				};
			}
		}

		public class plm_samples_t
		{
			public double time;
			public uint count;
			public float[] interleaved = new float[2304];
		}

		public struct plm_vlc_t
		{
			public short index;
			public short value;

			public plm_vlc_t(short i, short v)
			{
				index = i;
				value = v;
			}
		}

		public struct plm_vlc_uint_t
		{
			public short index;
			public ushort value;

			public plm_vlc_uint_t(short i, ushort v)
			{
				index = i;
				value = v;
			}
		}

		public struct plm_video_motion_t
		{
			public int full_px;
			public int is_set;
			public int r_size;
			public int h;
			public int v;
		}

		public struct plm_quantizer_spec_t
		{
			public ushort levels;
			public byte group;
			public byte bits;

			public plm_quantizer_spec_t(ushort l, byte g, byte b)
			{
				levels = l;
				group = g;
				bits = b;
			}
		}
	}
}